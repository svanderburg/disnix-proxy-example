<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:id="chap-usage">

	<title>Usage</title>

	<para>
		This example comes in two variants. You can either deploy the server and client
		with or without proxy. There are three ways to try to deploy this example.
		The <filename>deployment/DistributedDeployment</filename> folder contains all
		neccessary Disnix models, such as a services, infrastructure and distribution
		models required for deployment.
	</para>
	
	<section>
		<title>Deployment in a heterogeneous network</title>
		
		<para>
			For this scenario only installation of the basic Disnix toolset is required.
			First, you must manually install a network of machines running the Disnix service.
			Then you must adapt the infrastructure model to match to properties of your network
			and the distribution model to map the services to the right machines.
		</para>
		
		<para>
			The variant without proxy can be deployed by running the following command:
<screen>
$ disnix-env -s services-without-proxy.nix -i infrastructure.nix -d distribution-without-proxy.nix
</screen>
		</para>

		<para>
			The variant with proxy can be deployed by running the following command:
			
<screen>
$ disnix-env -s services-with-proxy.nix -i infrastructure.nix -d distribution-with-proxy.nix
</screen>
		</para>
	</section>
	
	<section>
		<title>Deployment using DisnixOS</title>
		
		<para>
			For this scenario you need to install a network of NixOS machines, running the
			Disnix service. This can be done by enabling the following configuration
			option in each <filename>/etc/nixos/configuration.nix</filename> file:
			
<screen>
services.disnix.enable = true;
</screen>
		</para>
		
		<para>
			You may also need to adapt the NixOS configurations to which the
			<filename>network.nix</filename> model is referring, so that they will
			match the actual system configurations.
		</para>
		
		<para>
			The system including its underlying infrastructure can be deployed
			by using the <command>disnixos-env</command> command. The following
			instruction deploys the variant without a proxy:
			
<screen>
$ disnixos-env -s services-without-proxy.nix -n network.nix -d distribution-without-proxy.nix
</screen>
		</para>
		
		<para>
			The following instruction deploys the variant with a proxy:
			
<screen>
$ disnixos-env -s services-with-proxy.nix -n network.nix -d distribution-with-proxy.nix
</screen>
		</para>
	</section>
	
	<section>
		<title>Deployment using the DisnixOS virtualization feature</title>
		
		<para>
			This system can be deployed without adapting any of the models in
			<filename>deployment/DistributedDeployment</filename>. By running
			the following instruction, the variant without the proxy can be deployed in a network
			of virtual machines:
			
<screen>
$ disnixos-vm-env -s services-without-proxy.nix -n network.nix -d distribution-without-proxy.nix
</screen>
		</para>
		
		<para>
			By running the following instruction, the variant with proxy can be deployed in a
			network of virtual machines:
		</para>
		
<screen>
$ disnixos-vm-env -s services-with-proxy.nix -n network.nix -d distribution-with-proxy.nix
</screen>
		
		<para>
			The disadvantage of using the virtualization extension is that no upgrades
			can be performed and thus the locking mechanism cannot be used.
		</para>
	</section>
	
	<section>
		<title>Running the system</title>
		
		<para>
			After the system has been deployed, the hello world client can be started from the command-line
			on the machine on which it is deployed, by typing the following instruction:
			
<screen>
$ /nix/var/nix/profiles/disnix/default/bin/hello-world-client
</screen>

			By typing: 'hello' the server returns 'Hello world'. By typing 'quit' the clients disconnects.
		</para>
		
		<para>
			If the system is using the proxy, try to upgrade the system while a client is connected, e.g.
			by moving the hello world server from one machine to another. You will notice that the upgrade
			does not start while the client is still connected. If you try to connect to the server with
			another client, the connection is queued. If you disconnect the client, then the upgrade will
			start.
		</para>
	</section>
</chapter>
